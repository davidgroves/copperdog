server {
   listen         80;
   server_name    {{ ansible_hostname }}.copperdog.org;
   return         301 https://$server_name$request_uri;
}

server {
    listen         443 ssl;
    server_name    {{ ansible_hostname }}.copperdog.org;
    index          index.html index.htm index.php;
    root /data/websites/copperdog.org;

    error_page 404 /error/404.html;
    
    location / {
        try_files $uri $uri/ =404;
    }

    location ^~ /error/ {
        internal;
        root /data/websites/copperdog.org;
    }

    location ^~ /jupyter/ {
        auth_pam                "Jupyter Notebook";
        auth_pam_service_name   "nginx";

        proxy_pass https://127.0.0.1:8888;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Origin "";
    }

    location ~ /photos/ {
        root /opt/lychee/;
        try_files $uri $uri/ =404;
    }
	    
	location ~ \.php$ {
        try_files $uri =404;
	    fastcgi_split_path_info ^(.+\.php)(/.+)$;
	    fastcgi_pass unix:/var/run/php5-fpm.sock;
	    fastcgi_index index.php;
	    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	    include /etc/nginx/fastcgi_params;
    }

    # Nginx configuration specific to Jenkins
    # Note that regex takes precedence, so use of "^~" ensures earlier evaluation
    location ^~ /jenkins/ {

        # Convert inbound WAN requests for https://domain.tld/jenkins/ to
        # local network requests for http://10.0.0.100:8080/jenkins/
        proxy_pass http://127.0.0.1:8080/jenkins/;

        # Rewrite HTTPS requests from WAN to HTTP requests on LAN
        proxy_redirect http://127.0.0.1:8080 $scheme://bach.copperdog.org;

        # The following settings from https://wiki.jenkins-ci.org/display/JENKINS/Running+Hudson+behind+Nginx
        sendfile off;

        proxy_set_header   Host                 $host;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto    $scheme;
        proxy_http_version 1.1;
        proxy_max_temp_file_size 0;

        #this is the maximum upload size
        client_max_body_size       1000m;
        client_body_buffer_size    128k;

        proxy_connect_timeout      1;
        proxy_send_timeout         90;
        proxy_read_timeout         90;

        proxy_buffer_size          4k;
        proxy_buffers              4 32k;
        proxy_busy_buffers_size    64k;
        proxy_temp_file_write_size 64k;
    }

    location ^~ /kibana/ {
        auth_pam                "Kibana";
        auth_pam_service_name   "nginx";

        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto    $scheme;

        proxy_pass http://127.0.0.1:5601/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    ssl_certificate /etc/ssl/{{ ansible_hostname }}.copperdog.org.crt;
    ssl_certificate_key /etc/ssl/{{ ansible_hostname }}.copperdog.org.key;

    # SSL recommendations from https://cipherli.st/
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:AES256+EECDH";
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
}
